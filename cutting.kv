#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#:import Factory kivy.factory.Factory


<MyPopup@Popup>:
    auto_dismiss: False
    size_hint: 0.4,0.15
    title: 'Van setup not implemented'
    name: "error"
    Button:
        text: 'Close'
        pos_hint: {'x':0,'y':0.0}
        on_release: root.dismiss()

<Information_Popup@Popup>:
    auto_dismiss: True
    size_hint: 0.4,0.15
    title: 'Selected values'
    name: "information_popup"
    Label:
        text: "SelectWindowSizeScreen.FlushStraight.selected_vans"



<SafetyPopup@Popup>:
    auto_dismiss: False
    size_hint: 0.4,0.15
    title: 'SAFETY CHECK'
    name: "check"
    Button:
        text: 'Check your selection before starting calibration'
        pos_hint: {'x':0,'y':0.0}
        on_release: root.dismiss()


<MainScreen>:
    name: "main"
    FloatLayout:
        Image:
            source: 'logo.jpg'
            size_hint: 0.6, 0.6
            pos_hint: {'top':1, 'x': 0.20}
            allow_stretch: True
        Image:
            source: 'roofwindow.jpg'
            size_hint: 0.2, 0.2
            pos_hint: {'x': 0.05, 'y': 0.7}
            allow_stretch: True
        Image:
            source: 'smallwindow.jpg'
            size_hint: 0.2, 0.2
            pos_hint: {'x': 0.05, 'y': 0.1}
            allow_stretch: True
        Image:
            source: 'bigwindow.jpg'
            size_hint: 0.2, 0.2
            pos_hint:  {'x': 0.7, 'y': 0.1}
            allow_stretch: True
        Button:
            pos_hint: {'x': 0.15, 'y': 0.4}
            size_hint: 0.7, 0.1
            font_size:25
            text: "Start cutting by robot"
            background_color: 0,0.8, 0, 1
            on_release:
                app.root.current = "connect"
                root.manager.transition.direction = 'left'

<ConnectScreen>:
    name: "connect"
    FloatLayout:
        Image:
            source: 'TotaalOntwerp.jpg'
            size_hint: 1.15, 1.15
            pos_hint:  {'x': -0.1, 'y': -0.1}
            allow_stretch: True
            opacity: 0.4
        Button:
            id: connect_button
            text: "Connect to Robot"
            on_release:
                root.manager.transition.direction = 'left'
                if not(root.connect_robot and root.connect_camera and root.connect_arduino): root.connect_to_robot()
                if root.connect_robot and root.connect_camera and root.connect_arduino: app.root.current = "select_van"
            disabled: root.connecting
            pos_hint: {'x': 0.15, 'y': 0.1}
            size_hint: 0.7, 0.1
            font_size:25
            canvas.before:
                Color:
                    rgba:0.7,0.7,0.7,1
                Rectangle:
                    pos: self.pos
                    size: self.size

        Label:
            id: robot_connect
            text:  str("Connected" if root.connect_robot else "Not Connected")
            pos_hint: {'x': 0.6, 'y': 0.8}
            size_hint: 0.2, 0.1
            color: (0,0.5,0,1) if root.connect_robot else (1,0,0,1)
            canvas.before:
                Color:
                    rgba:0.7,0.7,0.7,1
                Rectangle:
                    pos: self.pos
                    size: self.size
        Label:
            id: camera_connect
            text: str("Connected" if root.connect_camera else "Not Connected")
            pos_hint: {'x': 0.6, 'y': 0.68}
            size_hint: 0.2, 0.1
            color: (0,0.5,0,1) if root.connect_camera else (1,0,0,1)
            canvas.before:
                Color:
                    rgba:0.7,0.7,0.7,1
                Rectangle:
                    pos: self.pos
                    size: self.size
        Label:
            id: arduino_connect
            text: str("Connected" if root.connect_arduino else "Not Connected")
            pos_hint: {'x': 0.6, 'y': 0.56}
            size_hint: 0.2, 0.1
            color: (0,0.5,0,1) if root.connect_arduino else (1,0,0,1)
            canvas.before:
                Color:
                    rgba:0.7,0.7,0.7,1
                Rectangle:
                    pos: self.pos
                    size: self.size
        Label:
            text: "Robot"
            pos_hint: {'x': 0.8, 'y': 0.8}
            size_hint: 0.2, 0.1
            color: 0,0,0,1
            canvas.before:
                Color:
                    rgba:0.7,0.7,0.7,1
                Rectangle:
                    pos: self.pos
                    size: self.size
        Label:
            text: "Camera"
            pos_hint: {'x': 0.8, 'y': 0.68}
            size_hint: 0.2, 0.1
            color: 0,0,0,1
            canvas.before:
                Color:
                    rgba:0.7,0.7,0.7,1
                Rectangle:
                    pos: self.pos
                    size: self.size
        Label:
            text: "Arduino"
            pos_hint: {'x': 0.8, 'y': 0.56}
            size_hint: 0.2, 0.1
            color: 0,0,0,1
            background_color: 0.7,0.7,0.7,1
            canvas.before:
                Color:
                    rgba:0.7,0.7,0.7,1
                Rectangle:
                    pos: self.pos
                    size: self.size
        Button:
            text: "Back"
            font_size: 25
            pos_hint: {'x':0, 'y':0.9}
            size_hint: 0.2, 0.1
            on_release:
                app.root.current = "main"
                root.manager.transition.direction = 'right'

<SelectVanScreen>:
    name: "select_van"
    FloatLayout:
        Button:
            id: mercedes_sprinter
            size_hint: 0.3,0.2
            pos_hint: {'x':0.05, 'y':0.6}
            text: 'Mercedes Sprinter'
            background_color: 0.8, 1, 0, 0.7
            on_release: Factory.MyPopup().open()

        Button:
            id: volkswagen_crafter
            size_hint: 0.3,0.2
            pos_hint: {'x':0.35, 'y':0.6}
            text: 'VolksWagen Crafter'
            background_color: 0.0, 0.5, 1, 0.7
            on_release: Factory.MyPopup().open()
        Button:
            id: ford_transit
            size_hint: 0.3,0.2
            pos_hint: {'x':0.65, 'y':0.6}
            text: 'Ford Transit'
            background_color: 0.8,1,0, 0.7
            on_release: Factory.MyPopup().open()

        Button:
            id: fiat_ducato
            size_hint: 0.3,0.2
            pos_hint: {'x':0.05, 'y':0.4}
            text: 'Fiat Ducato'
            background_color: 0.8,1,0, 0.7
            on_release:
                root.manager.transition.direction = 'left'
                app.root.current = "select_van_size"
                root.FiatDucato()
        Button:
            id: renault_master
            size_hint: 0.3,0.2
            pos_hint: {'x':0.35, 'y':0.4}
            text: 'Renault Master'
            background_color: 0.0,0.5,1, 0.7
            on_release: Factory.MyPopup().open()
        Button:
            size_hint: 0.3,0.2
            pos_hint: {'x':0.65, 'y':0.4}
            text: 'Ram ProMaster'
            background_color: 0.8,1,0, 0.7
            on_release: Factory.MyPopup().open()
        Button:
            text: "Back"
            font_size: 25
            pos_hint: {'x':0, 'y':0.9}
            size_hint: 0.2, 0.1
            on_release:
                app.root.current = "connect"
                root.manager.transition.direction = 'right'

<SelectVanSizeScreen>:
    name: "select_van_size"
    FloatLayout:
        Spinner:
            id: van_size
            size_hint: 0.6,0.2
            pos_hint: {'x': 0.2, 'y':0.6}
            text: 'Select Van Size'
            values: ('L3H2', 'L2H2', 'L2H1', 'L1H1')
            background_color: 0.8,1,0, 0.7
            on_text:
                root.manager.transition.direction = 'left'
                if van_size.text == "L2H2": root.L2H2()
                if van_size.text == "L2H2": app.root.current = "select_windowsize"
                else: Factory.MyPopup().open()

        Button:
            text: "Back"
            font_size: 25
            pos_hint: {'x':0, 'y':0.9}
            size_hint: 0.2, 0.1
            on_release:
                app.root.current = "select_van"
                root.manager.transition.direction = 'right'

<SelectWindowSizeScreen>:
    name: "select_windowsize"
    FloatLayout:
        Spinner:
            id: select_windowsize
            size_hint: 0.6,0.2
            pos_hint: {'x': 0.2, 'y':0.6}
            text: 'Select Item to be placed'
            values: 'Skylight', 'RoofVent', 'Flush Curved', 'Flush Straight'
            background_color: 0.8,1,0, 0.7
            on_text:
                root.manager.transition.direction = 'left'
                app.root.current = "start_calibration"
                if select_windowsize.text == "Skylight": root.Skylight()
                if select_windowsize.text == "RoofVent": root.RoofVent()
                if select_windowsize.text == "Flush Curved": root.FlushCurved()
                if select_windowsize.text == "Flush Straight": a = root.FlushStraight()
        Button:
            text: "Back"
            font_size: 25
            pos_hint: {'x':0, 'y':0.9}
            size_hint: 0.2, 0.1
            on_release:
                app.root.current = "select_van"
                root.manager.transition.direction = 'right'

<LabelGrid>:
    cols: 4
    row_default_height: 10
    row_minimum_height: 10
    padding: (100,100,100,150)
    background_color: 0.7,0.7,0.7,1

<StepLabel>:
    text: "Empty"
    color: (0,0,0,1)
    size_hint: 1, 0.2
    text_size: self.size
    halign: 'left'
    valign: 'middle'
    canvas.before:
        Color:
            rgba:0.7,0.7,0.7,1
        Rectangle:
            pos: self.pos
            size: self.size

<StepLabelStatus>:
    text: "Empty"
    color: (0,0,0,1)
    size_hint: 1, 0.2
    text_size: self.size
    halign: 'left'
    valign: 'middle'
    canvas.before:
        Color:
            rgba:0.8,0.8,0.8,1
        Rectangle:
            pos: self.pos
            size: self.size


<StartCalibrationScreen>:
    name: "start_calibration"

    FloatLayout:
        LabelGrid:
            id: step_table

        Button:
            id: calibration_button
            text: "Calibrated, go to Cutting screen" if root.calibrated else "Start Calibration"
            disabled: root.calibrating
            on_release:
                root.manager.transition.direction = 'left'
                root.start_calibration()
                if root.calibrated: app.root.current = "start_cut"
            pos_hint: {'x': 0.15, 'y': 0.1}
            size_hint: 0.7, 0.1
            font_size:25
        Button:
            id: stop_button
            disabled: not root.calibrating
            text: "Stop"
            font_size: 25
            pos_hint: {'x':0.4, 'y':0.01}
            size_hint: 0.2, 0.09
            background_color: 1,0,0,1
            color:1,1,1,1
            on_release:
                root.stop()
        Button:
            text: "Back"
            font_size: 25
            pos_hint: {'x':0, 'y':0.9}
            size_hint: 0.2, 0.1
            on_release:
                app.root.current = "select_windowsize"
                root.manager.transition.direction = 'right'

<StartCutScreen>:
    name: "start_cut"
    FloatLayout:
        Button:
            text: "start_cut"
            on_release:
                root.manager.transition.direction = 'left'
                root.start_cut()
                if root.cut_done: app.root.current = "main"
            pos_hint: {'x': 0.15, 'y': 0.2}
            disabled_color: 1,1,1,0.8
            size_hint: 0.7, 0.1
            disabled: root.safety_checked
            font_size:25
        Button:
            text: "Move in to start cut with offset"
            on_release: root.move_offset()
            pos_hint: {'x': 0.15, 'y': 0.6}
            size_hint: 0.7, 0.1
            font_size:25
        Button:
            text: "YES"
            on_release: root.check_position()
            disabled: root.moved_to_offset
            pos_hint: {'x': 0.15, 'y': 0.4}
            size_hint: 0.35, 0.1
            background_color: 0,0.5,0,1
            font_size:25

        Button:
            text: "NO"
            on_release: app.root.current = "start_calibration"
            disabled: root.moved_to_offset
            pos_hint: {'x': 0.50, 'y': 0.4}
            size_hint: 0.35, 0.1
            background_color: 0.5,0,0,1
            font_size:25
        Button:
            text: "Back"
            font_size: 25
            pos_hint: {'x':0, 'y':0.9}
            size_hint: 0.2, 0.1
            on_release:
                app.root.current = "start_calibration"
                root.manager.transition.direction = 'right'
